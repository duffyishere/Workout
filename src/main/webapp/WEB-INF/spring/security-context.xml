<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="customAccessDenied"
		class="org.hanyang.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess" 
		class="org.hanyang.security.CustomLoginSuccessHandler"></bean>
	<bean id="bycryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	<bean id="customUserDetailsService"
		class="org.hanyang.security.CustomUserDetailsService"></bean>

	<security:http>
		<!-- <security:csrf disabled="true"/> -->
		
		<security:intercept-url pattern="/workout/insert" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/workout/lookUp" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
		
		<!-- <security:intercept-url pattern="/**" access="permitAll"/> -->

		<!-- <security:access-denied-handler error-page="/accessError"/> -->
		
		<security:access-denied-handler ref="customAccessDenied" />

		<security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess"/>
		
		<!-- <security:logout logout-url="/customLogout" invalidate-session="true"/> -->

		<security:logout logout-url="/customLogout" invalidate-session="true" delete-cookies="remember-me, JESSION_ID"/>
		
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604000"/>
		
		<security:csrf/>
		
	</security:http>

	<security:authentication-manager>

	
		<security:authentication-provider 
			user-service-ref="customUserDetailsService">
			
			<!-- <security:jdbc-user-service 
			data-source-ref="dataSource"
			users-by-username-query="select userid username, userpw password, enable from tbl_member where userid = ?"
			authorities-by-username-query="select userid username, auth authority from tbl_member_auth where userid = ?"/>
			 -->
			 
			<security:password-encoder ref="bycryptPasswordEncoder"/>
			
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
